services:
  postgres-primary:
    image: postgres:13
    container_name: postgres-primary
    ports:
      - "8888:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: instagram
    volumes:
      - data_postgresql:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - instagram-network

  redis-primary:
    image: "redis:alpine"
    container_name: redis-primary
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 5s
    restart: always
    networks:
      - instagram-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    env_file:
      - ./backend/.env
    ports:
      - "5555:5555"
    depends_on:
      redis-primary:
        condition: service_healthy
      postgres-primary:
        condition: service_healthy
    networks:
      - instagram-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    env_file:
      - ./frontend/.env
    ports:
      - "3005:3005"
    depends_on:
      - backend:
        condition: service_started
    networks:
      - instagram-network

volumes:
  data_postgresql:
networks:
  instagram-network:
    driver: bridge
